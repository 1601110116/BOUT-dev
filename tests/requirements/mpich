#!/usr/bin/env bash

# Tests if mpich is being used
# NOTE: A more robust method is needed!

SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"

cxx=$($SCRIPTPATH/../../bin/bout-config --cxx)

cxx=$(which $cxx)

# Recursively resolve the symlink to the compiler
# At somepoint the path should contain whether mpich or openmpi is used

# Store the list of all names
all=

while :
do
    # Append the current path
    all="$all $cxx"
    # Resolve one level
    read_cxx=$(readlink $cxx)
    # If it should be empty, we are finished
    test "$read_cxx" || break
    # Check if which - in case this is not a full path
    which_cxx=$(which $read_cxx)
    # If the new file is the same as the old, we are finished
    test ".$which_cxx" = ".$cxx" && break
    # set the new found path as starting point for next iteration
    cxx=$which_cxx
done


check_for_mpich() {
    all="$@"
    openmpi=
    mpich=

    if echo "$all"|grep mpich
    then
        mpich=1
    fi

    if echo "$all" |grep openmpi || echo "$all" |grep open-mpi
    then
        openmpi=1
    fi

    if ((test $openmpi ) && (test -z $mpich )) || ((test -z $openmpi ) && (test $mpich))
    then
        if test $mpich
        then
            exit 0
        else
            exit 1
        fi
    fi
}

check_for_mpich "$all"


# Help page contains a link to homepage, so check that if previous check was not good
all=$(mpirun --help 2>&1 )

check_for_mpich "$all"

echo >/dev/stderr "Failed to detect the mpi version"
exit 2
