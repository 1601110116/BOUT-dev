#!/bin/bash

BOUT_TOP=../../..
error=

for i in BoutReal # double float int char size_t
do
    grep -E "\([^\)]*const[^\(,:<]*$i[^,\):\*>]*\&"  -r --include=*xx $BOUT_TOP &&
        error=yes &&
        echo "const $i should be passed by value"
done
#for emacs regexp: \([,\(]\)[[:space:]]*const[[:space:]]+\([A-Za-z]+\)[[:space:]]+\([A-Za-z0-9]+\)[[:space:]]*\([,\)]\) â†’ \1\2 \3\4)
grep [\(,][[:space:]]*const[[:space:]][[:alnum:]]*[[:space:]][[:alnum:]]*[[:space:]]*[,\)] -r --include=*hxx $BOUT_TOP -n &&
    error=yes &&
    echo "Declaration of functions shouldn't declare pass-by-value as const"


paths="src include examples tests"

GIT=git
if $GIT status &>/dev/null
then
  if which clang-format &> /dev/null
  then
    # Find autogenerated files
    autogens=""
    for path in $paths
    do
        autogens="$(for f in $(find $BOUT_TOP/$path |grep '\.in\.[a-z0-9A-Z]*$')
                   do
                       echo ${f%.in.*}
                   done | sort -u) $autogens"
    done
    for autogen in $autogens
    do
        if ! $GIT diff --exit-code $autogen &> /dev/null
        then
            error=1
            echo "$autogen changed - but should be autogenerated"
            echo "diff listed below"
            echo
            $GIT diff $autogen
            echo
        fi
        if ! test "$error"
        then
            make -C ${autogen%/*} --no-print-directory
        fi
        if ! $GIT diff --exit-code $autogen &> /dev/null
        then
            error=1
            echo "$autogen changed upon recreation"
            echo "diff listed below"
            echo
            $GIT diff $autogen
            echo
            echo "Checking file out - to prevent further changes"
            $GIT checkout $autogen
        fi
    done
  else
    echo "Skipping test - as clang-format is not available!"
  fi
else
    echo "Skipping test - as git is not available!"
fi

# Check that exceptions are caught by reference
for path in $paths
do
    catch_errors=$(grep catch[^\(]*\([^\(]*Bout $BOUT_TOP/$path --include=*xx -r|grep -v '&')
    ex=$?
    if test $ex -eq 0
    then
        error=yes
        echo "Found catch by value - not by reference:"
        echo "$catch_errors"
    fi
done


# Return
if test $error
then
    echo "-> Errors listed above"
    exit 1
else
    echo "No Errors detected"
    exit 0
fi
