#!/bin/bash

BOUT_TOP=../../..
error=

paths="$BOUT_TOP/src $BOUT_TOP/include $BOUT_TOP/examples"
for i in BoutReal # double float int char size_t
do
    grep -E "\([^\)]*const[^\(,:<]*$i[^,\):\*>]*\&"  -r --include=*xx $paths &&
    error=yes &&
    echo "const $i should be passed by value"
done
#for emacs regexp: \([,\(]\)[[:space:]]*const[[:space:]]+\([A-Za-z]+\)[[:space:]]+\([A-Za-z0-9]+\)[[:space:]]*\([,\)]\) â†’ \1\2 \3\4)
grep [\(,][[:space:]]*const[[:space:]][[:alnum:]]*[[:space:]][[:alnum:]]*[[:space:]]*[,\)] -r --include=*hxx $paths -n &&
    error=yes &&
    echo "Declaration of functions shouldn't declare pass-by-value as const"


paths="src include examples tests"

function compare() {
    cat "$1" | sed s/[[:space:]]*/\\n/g > .tmp1.nospace
    cat "$2" | sed s/[[:space:]]*/\\n/g > .tmp2.nospace
    diff -B .tmp1.nospace .tmp2.nospace &>/dev/null
    ex=$?
    rm .tmp1.nospace .tmp2.nospace
    if test $ex -eq 0
    then
        return 0
    else
        diff "$1" "$2"
        return $ex
    fi
}

function make_file() {
    autogen=$1
    force=
    if test $2 && test ".$2" = ".-f"
    then
        force=yes
        # touch the sources, but keep reference stamp
        for src in $autogen.in.*
        do
            touch $src.stamp -r $src
            touch $src
        done
    fi
    make -C ${autogen%/*} --no-print-directory ${autogen##*/}
    if test $force
    then
        # Reset time for sources
        for src in $autogen.in.*
        do
            if ! (echo $src|grep stamp &>/dev/null)
            then
                touch $src -r $src.stamp
                rm $src.stamp
            fi
        done
    fi
}


GIT=git
if $GIT status > /dev/null 2>&1
then
  if which clang-format &> /dev/null
  then
    # Find autogenerated files
    autogens=""
    for path in $paths
    do
        autogens="$(for f in $(find $BOUT_TOP/$path |grep '\.in\.[a-z0-9A-Z]*$')
                   do
                       echo ${f%.in.*}
                   done | sort -u) $autogens"
    done
    for autogen in $autogens
    do
        cp $autogen $autogen.cur
        $GIT checkout $autogen
        if ! compare $autogen $autogen.cur
        then
            error=1
            echo "$autogen changed - but should be autogenerated"
            echo "diff listed above"
            mv $autogen.cur $autogen
            continue
        fi
        make_file $autogen -f
        if ! compare $autogen $autogen.cur
        then
            error=1
            echo "$autogen changed upon recreation"
            echo "diff listed above"
            mv $autogen.cur $autogen
            continue
        fi
        mv $autogen.cur $autogen
    done
  else
    echo "Skipping test - as clang-format is not available!"
  fi
else
    echo "Skipping test - as git is not available!"
fi

# Check that exceptions are caught by reference
for path in $paths
do
    catch_errors=$(grep catch[^\(]*\([^\(]*Bout $BOUT_TOP/$path --include=*xx -r|grep -v '&')
    ex=$?
    if test $ex -eq 0
    then
        error=yes
        echo "Found catch by value - not by reference:"
        echo "$catch_errors"
    fi
done


# Return
if test $error
then
    echo "-> Errors listed above"
    exit 1
else
    echo "No Errors detected"
    exit 0
fi
