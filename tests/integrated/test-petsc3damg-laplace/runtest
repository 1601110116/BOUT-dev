#!/usr/bin/env python3

#requires not (travis and mpich)

#
# Run the test, check the error
#

from __future__ import print_function
try:
    from builtins import str
except:
    pass

tol = 2e-7 # Absolute tolerance
numTests = 4 # We test 4 different boundary conditions (with slightly different inputs for each)

from boututils.run_wrapper import shell, shell_safe, launch_safe, getmpirun
from boutdata.collect import collect
from sys import exit

MPIRUN = getmpirun()

print("Making petsc3damg Laplacian inversion test")
shell("rm test_petscamg_laplace")
shell_safe("make > make.log")

print("Running petsc3damg Laplacian inversion test")
success = True

nproc = 32

cmd = "./test_petsc3damg_laplace"

shell("rm data/BOUT.dmp.*.nc")

s, out = launch_safe(cmd, runcmd=MPIRUN, nproc=nproc, pipe=True)
with open("run.log."+str(nproc), "w") as f:
    f.write(out)

# Collect errors
errors = [collect("max_error"+str(i), path="data") for i in range(1,numTests+1)]

for i,e in enumerate(errors):
    print("Checking test "+str(i))
    if e < 0.:
        print("Fail, solver did not converge")
        success = False
    if e > tol:
        print("Fail, maximum absolute error = "+str(e))
        success = False
    else:
        print("Pass")

if success:
    print(" => All petsc3damg Laplacian inversion tests passed")
    exit(0)
else:
    print(" => Some failed tests")
    exit(1)
