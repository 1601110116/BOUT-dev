#!/usr/bin/env python3

from boututils.run_wrapper import shell, shell_safe, launch_safe, getmpirun
from boutdata.collect import collect

from os import path
from sys import exit
import numpy as np

nthreads = 1
nproc = 1
MPIRUN = getmpirun()

expected_value = np.pi / 4.

print("Making solver test")
shell_safe("make > make.log")

print("Removing previous run files")
shell_safe("make clean-dumps")

print("Running solver test")
s, out = launch_safe("./test_solver", runcmd=MPIRUN, nproc=nproc, mthread=nthreads, pipe=True)
with open("run.log", "w") as f:
    f.write(out)

solvers = [
    "arkode",
    "cvode",
    "euler",
    "ida",
    "imexbdf2",
    "karniadakis",
    "petsc",
    "pvode",
    "rk3ssp",
    "rk4",
    "rkgeneric",
    "snes",
]

errors = {}

for solver in solvers:
    if not path.exists("data/{}.0.nc".format(solver)):
        continue

    print("Checking", solver)
    field = collect("field_" + solver, prefix=solver, path="data", xind=1, yind=0, zind=0, info=False)
    
    if np.allclose(field, expected_value):
        print(" => PASSED")
    else:
        print(" => FAILED")
        print("Got: {}, expected: {}".format(field[0,0,0], expected_value))
        errors[solver] = field[0,0,0]

if errors:
    print("---------------")
    print("The following tests failed:")
    for key, value in errors.items():
        print("{}: {}".format(key, value))
    exit(1)
