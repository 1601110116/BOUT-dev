# DALF3 model settings

##################################################
# Global settings used by the core code

NOUT = 100          # number of time-steps
TIMESTEP = 1       # time between outputs
archive = 20        # Archive restart files after this number of outputs
wall_limit = 1.55  # wall time limit (in hours)

ShiftXderivs = true # use shifted radial derivatives?
TwistShift = true   # use twist-shift condition?
ShiftOrder = 0      # interpolation order (1 = nearest neighbour, 0=FFT)
TwistOrder = 0      # order of twist-shift interpolation

MZ = 17             # number of points in z direction (2^n + 1)
ZPERIOD = 15        # Fraction of a torus to simulate

MXG = 2
MYG = 2

NXPE = 16            # Number of processor in X

grid = "cbm18_8_y064_x516_090309.nc"  # Grid file

dump_format = "nc"      # Dump file format. "nc" = NetCDF, "pdb" = PDB
restart_format = "nc"   # Restart file format

StaggerGrids = false    # Use staggered grids (EXPERIMENTAL)

##################################################
# Communications
# Fastest setting depends on machine and MPI
# implementation. Do not affect result.

[comms]

async = false           # Use asyncronous sends?
pre_post = false        # Post receives as early as possible
group_nonblock = false  # Use non-blocking group operations?

##################################################
# Laplacian inversion routines

[laplace]

# max_mode = 16  # Maximum N to solve for

##################################################
# FFTs

[fft]

fft_measure = true  # If using FFTW, perform tests to determine fastest method

##################################################
# derivative methods

[ddx]

first = C4  # order of first x derivatives (options are 2 or 4)
second = C4 # order of second x derivatives (2 or 4)
upwind = W3 # order of upwinding method (1, 4, 0 = TVD (DO NOT USE), 3 = WENO)

[ddy]

first = C4
second = C4
upwind = W3

[ddz]

first = C4  # Z derivatives can be done using FFT
second = C4
upwind = W3

##################################################
# Solver settings

[solver]

# mudq, mldq, mukeep, mlkeep preconditioner options
ATOL = 1.0e-8 # absolute tolerance
RTOL = 1.0e-5  # relative tolerance

use_precon = false    # Use preconditioner: User-supplied or BBD
use_jacobian = false  # Use user-supplied Jacobian

mxstep = 5000   # Number of internal steps between outputs
adams_moulton = false # Use Adams-Moulton method (default is BDF)
func_iter = false     # Functional iteration (default is Newton)

##################################################

[dalf3]

estatic = false
ZeroElMass = false

[All]
scale = 0.0 # default size of initial perturbations

# form of initial profile:
# 0 - constant
# 1 - Gaussian
# 2 - Sinusoidal
# 3 - Mix of mode numbers (like original BOUT)

xs_opt = 1
ys_opt = 1
zs_opt = 2

xs_s0 = 0.5
xs_wd = 0.1

ys_s0 = 0.5
ys_wd = 0.3

zs_mode = 1

# boundary conditions
# -------------------
# dirichlet    - Zero value
# neumann      - Zero gradient
# zerolaplace  - Laplacian = 0, decaying solution
# constlaplace - Laplacian = const, decaying solution
#
# relax( )   - Make boundary condition relaxing

bndry_all = dirichlet # Default to zero-value

[U]   # vorticity

scale = 1.0e-5

[apar]
bndry_xin = none
bndry_xout = none
bndry_target = neumann

[jpar]
bndry_xin = none
bndry_xout = none
bndry_target = neumann

[phi]
bndry_xin = none
bndry_xout = none
bndry_target = neumann

[P]  # pressure
#scale = 1.0e-5

[Psi]  # Vector potential

# zero laplacian
bndry_xin = zerolaplace
bndry_xout = zerolaplace

[J]    # parallel current

# Zero gradient in the core
bndry_core = neumann

[Vpar]

bndry_core = neumann

[phi]

bndry_core = neumann
