#
# Input file for "bout_runners_example/data"
#

# Root option
###############################################################################
nout = 10              # Number of output timesteps
timestep = 0.01        # Time between outputs

dump_format="nc"   # Write NetCDF format files

# Setting the z coordinate
ZMIN = 0.0
ZMAX = 1.0 # dz = 2*pi(ZMAX - ZMIN)/(MZ - 1)

# Number of guard cells
MXG = 1
MYG = 1
###############################################################################


# Mesh option
###############################################################################
[mesh]
# Puts the boundaries half a step outside the last gridpoints
symmetricGlobalY=true
symmetricGlobalX=true

# The spatial dimension
nx = 18
ny = 16
nz = 16

# Position of the separatrix (-1 is non periodic, >ny is periodic)
# --------Non-periodic----------
ixseps1 = -1
ixseps2 = -1
# ------------------------------
###############################################################################


# Methods option
###############################################################################
# Methods used for the radial (x) derivative terms
[ddx]
second = C2 # d^2/dx^2 (f)

# Methods used for parallel (y) derivative terms
[ddy]
second = C2  # d^2/dy^2 (f)

#Methods used for the azimuthal (z) derivative terms
[ddz]
second = FTT # d^2/dz^2 (f)
###############################################################################


# Solver settings
###############################################################################
[solver]
type = pvode             # Which solver to use (cvode should be same as pvode)
mms = false              # false by default

atol = 1.0e-7 # absolute tolerance
rtol = 1.0e-7 # relative tolerance

# Max allowed iterations in one step
mxstep = 100000000
###############################################################################


# Specifying the output
###############################################################################
[output]
floats = false # floats = false => output in double
###############################################################################


# Additional options
###############################################################################
# Geometry
# -----------------------------------------------------------------------------
[geom]
Lx = 1                  # The length of x from boundary to boundary
Ly = 2*pi               # The length of y from boundary to boundary
# Setting the spatial variables
yl = y * geom:Ly / (2.0*pi) #y in range [0,Ly]
xl = x * geom:Lx            #x in range [0,Lx]
# -----------------------------------------------------------------------------

# Constants
# -----------------------------------------------------------------------------
[cst]
D_par  = 1.0           # Parallel diffusion constant
D_perp = 1.0           # Perpendicular diffusion constant
# -----------------------------------------------------------------------------

# Flags
# -----------------------------------------------------------------------------
[flag]
use_grid = False     # Lx and Ly loaded from a grid file
# -----------------------------------------------------------------------------

# The particle density
# -----------------------------------------------------------------------------
[n]
# Scaling
scale = 1.0

# Source and solution for MMS
# This does not seem to work....
# solution  = sin(geom:yl)
# source    = cst:D_par*sin(geom:yl)
# solution  = geom:yl^3
# source    = -6*cst:D_perp*geom:yl
#
# This works...
# For yl
solution = 0.9 + 0.9*geom:yl + 0.2*Cos(10*t)*Sin(5.*Power(geom:yl,2))
source = -2.*Sin(10*t)*Sin(5.*Power(geom:yl,2)) + Cos(10*t)*(-2.*Cos(5.*Power(geom:yl,2)) + 20.*Power(geom:yl,2)*Sin(5.*Power(geom:yl,2)))
# # For xl
# solution  = sin(geom:xl)
# source    = cst:D_perp*sin(geom:xl)
#
# Want this
# solution  = 10 + t^(2.5) + sin(3+geom:xl) + cos(2*geom:yl) + 4*z^2
# source    = 2.5*t^(1.5) - cst:D_perp*(-sin(3+geom:xl) + 8) - cst:D_par*(-4*cos(2*geom:yl))

# Boundary conditions
# Set the boundary to the initial condition
bndry_all   = dirichlet_o4(n:solution)
# -----------------------------------------------------------------------------
##############################################################################
