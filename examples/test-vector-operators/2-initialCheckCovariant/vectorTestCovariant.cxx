// ******** File used for testing a vector field **************

#include <bout.hxx>
#include <boutmain.hxx>

// Global variable initialization
// ############################################################################
// Evolved variables
// *****************************************************************************
Vector3D myVec;
// *****************************************************************************

// Constants
// *****************************************************************************
BoutReal Lx, Ly, Lx_inp, Ly_inp;  // The box dimensions
// *****************************************************************************
// ############################################################################


// Initialization of the physics
// ############################################################################
int physics_init(bool restarting) {
    // Get the option (before any sections) in the BOUT.inp file
    Options *options = Options::getRoot();

    // Save Lx and Ly
    // ************************************************************************
    Options *geom = options->getSection("geom");
    geom->get("Lx", Lx, 0.0);
    geom->get("Ly", Ly, 0.0);
    // ************************************************************************

    // Specify that myVec_ is contravariant
    // ************************************************************************
    myVec.covariant = true;
    // ************************************************************************

    // Specify what values should be stored in the .dmp file
    // ************************************************************************
    // Variables to be saved once
    SAVE_ONCE2(Lx, Ly);
    // Variables to be saved repeatedly
    SOLVE_FOR(myVec);
    //*************************************************************************
    return 0;
}
// ############################################################################



// Solving the equations
// ############################################################################
int physics_run(BoutReal t) {
    ddt(myVec) = 0;
    return 0;
}
// ############################################################################
