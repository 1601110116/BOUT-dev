#!/usr/bin/env python3

import boutcore

from boutdata import collect

boutcore.init(["-d","data"])#,"-f","BOUT.settings"])
n=collect("f2d",path='data',tind=-1,yguards=True)
print(n.shape)
T=collect("f3d",path='data',tind=-1,yguards=True)
print(n.shape)

print("initialized mesh")
mesh=boutcore.Mesh.getGlobal();
#mesh=boutcore.Mesh()
print("initialized mesh")

dens=boutcore.Field3D.fromMesh(mesh)
dens.setAll(n.reshape((1,1,1)))
#temp=boutcore.Field3D.fromMesh(mesh)
#temp.setAll(T.reshape(T.shape[1:]))
temp=boutcore.Field3D.fromCollect("f3d",path="data")
pres=dens+temp

p=pres.getAll()
pn=(n+T)
pn=pn.reshape(p.shape)
#print(p [::50,::10,::20])
#print(pn[::50,::10,::20])
if not ((p==pn).all()):
    error
pres=dens*temp*1
p=pres.getAll()
pn=n*T
pn=pn.reshape(p.shape)
if not ((p==pn).all()):
    error
print(p.shape)
print(pn.shape)
diff=boutcore.DDZ(pres)


mesh2=boutcore.Mesh(OptionSection="meshz2")
#dfdz=boutcore.DDZ(f)
#print(dfdz.getAll())
#print(f.getAll())
mesh4=boutcore.Mesh(OptionSection="meshz4")
f4=boutcore.create3D("sin(z)",mesh4)
f2=boutcore.create3D("sin(z)",mesh2)
df2dz=boutcore.DDZ(f2)
df4dz=boutcore.DDZ(f4)
print(df2dz.getAll())
print(df4dz.getAll())
print(f2.getAll())


#boutcore.finalise()
